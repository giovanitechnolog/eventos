#!/bin/bash

# Script de Inicializa√ß√£o do Sistema SIGx
# Automatiza√ß√£o de Jornadas de Trabalho

echo "üöÄ Iniciando Sistema SIGx - Automatiza√ß√£o de Jornadas"
echo "=================================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -d "sigx_backend" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

# Navegar para o diret√≥rio do backend
cd sigx_backend

# Verificar se o ambiente virtual existe
if [ ! -d "venv" ]; then
    echo "‚ùå Erro: Ambiente virtual n√£o encontrado"
    echo "   Execute: python -m venv venv"
    exit 1
fi

# Ativar ambiente virtual
echo "üîß Ativando ambiente virtual..."
source venv/bin/activate

# Verificar depend√™ncias
echo "üì¶ Verificando depend√™ncias..."
if [ ! -f "requirements.txt" ]; then
    echo "‚ùå Erro: Arquivo requirements.txt n√£o encontrado"
    exit 1
fi

# Instalar depend√™ncias se necess√°rio
pip install -q -r requirements.txt

# Verificar se o banco de dados existe
if [ ! -f "src/database/app.db" ]; then
    echo "üóÑÔ∏è  Criando banco de dados..."
    mkdir -p src/database
fi

# Verificar porta dispon√≠vel
PORT=5001
if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null ; then
    echo "‚ö†Ô∏è  Porta $PORT est√° em uso. Tentando porta 5002..."
    PORT=5002
    if lsof -Pi :$PORT -sTCP:LISTEN -t >/dev/null ; then
        echo "‚ùå Erro: Portas 5001 e 5002 est√£o em uso"
        echo "   Pare outros servi√ßos ou use uma porta diferente"
        exit 1
    fi
fi

# Atualizar porta no arquivo main.py se necess√°rio
if [ $PORT -ne 5001 ]; then
    sed -i "s/port=5001/port=$PORT/g" src/main.py
fi

echo "üåê Iniciando servidor na porta $PORT..."
echo "   Acesse: http://localhost:$PORT"
echo ""
echo "üìã Para parar o servidor, pressione Ctrl+C"
echo "=================================================="

# Iniciar servidor
python src/main.py

